import { string_data_url } from '../../../../types/typeAliases';
import { isRunningInNode } from '../../../../utils/isRunningInWhatever';

/**
 * Convert Blob or File to string data url
 * Tip: Consider using ObjectUrl class instead
 * Tip: You can pass dataurl and it will be returned as is
 * Tip: For data conversions @see https://bun.sh/guides/binary
 */
export async function blobToDataurl(source: Blob | File): Promise<string_data_url> {
    if (isRunningInNode() && 'arrayBuffer' in source) {
        // Note: [☔️] Same 2 lines of code in theese two functions to prevent circular dependency
        const buffer = Buffer.from(await source.arrayBuffer());
        const base64 = buffer.toString('base64');
        return `data:${source.type};base64,${base64}` as string_data_url;
    }

    return new Promise(
(resolve) => {
        const reader = new FileReader(
);
        reader.addEventListener('load', async (event) => {
            const dataurl = event.target!.result as string_data_url;
            resolve(dataurl);
        });
        reader.readAsDataURL(source);
    });
}

/**
 * TODO: Throw warning when dataurl is not valid due to its length
 * TODO: [🧺] In future uncomment
 * TODO: [🧺] Export via `@promptbook/pdf` and `@promptbook/docx`
 */
